// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ResocaMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ResocaMessage.proto</summary>
public static partial class ResocaMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for ResocaMessage.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ResocaMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNSZXNvY2FNZXNzYWdlLnByb3RvIsQHCg1SZXNvY2FNZXNzYWdlEhIKCmlz",
          "UmVzcG9uc2UYASABKAgSJwoHcmVxdWVzdBgCIAEoCzIWLlJlc29jYU1lc3Nh",
          "Z2UuUmVxdWVzdBIpCghyZXNwb25zZRgDIAEoCzIXLlJlc29jYU1lc3NhZ2Uu",
          "UmVzcG9uc2UanAEKCENhbkZyYW1lEg0KBWNhbklEGAEgASgNEg8KB2lzQ2Fu",
          "RkQYAiABKAgSEgoKaXNFRkZGUkFNRRgDIAEoCBISCgppc1JUUkZSQU1FGAQg",
          "ASgIEhIKCmlzRVJSRlJBTUUYBSABKAgSEgoKaXNDYW5GREVTSRgGIAEoCBIS",
          "Cgppc0NhbkZEQlJTGAcgASgIEgwKBGRhdGEYCiABKAwa4QEKB1JlcXVlc3QS",
          "NwoLcmVxdWVzdFR5cGUYASABKA4yIi5SZXNvY2FNZXNzYWdlLlJlcXVlc3Qu",
          "UmVxdWVzdFR5cGUSEQoJcmVxdWVzdElEGAIgASgNEg4KBmlmTmFtZRgDIAEo",
          "CRIpCghjYW5GcmFtZRgEIAEoCzIXLlJlc29jYU1lc3NhZ2UuQ2FuRnJhbWUi",
          "TwoLUmVxdWVzdFR5cGUSCAoEUElORxAAEhAKDE5PVElGWV9TVEFSVBABEg4K",
          "Ck5PVElGWV9FTkQQAhIKCgZDQU5fVFgQAxIICgRJTkZPEAQaxwMKCFJlc3Bv",
          "bnNlEjoKDHJlc3BvbnNlVHlwZRgBIAEoDjIkLlJlc29jYU1lc3NhZ2UuUmVz",
          "cG9uc2UuUmVzcG9uc2VUeXBlEhIKCnJlc3BvbnNlSUQYAiABKA0SEwoLZGVz",
          "Y3JpcHRpb24YAyABKAkSDgoGaWZOYW1lGAQgASgJEikKCGNhbkZyYW1lGAUg",
          "ASgLMhcuUmVzb2NhTWVzc2FnZS5DYW5GcmFtZRI2CgpyZXNvY2FJbmZvGAYg",
          "ASgLMiIuUmVzb2NhTWVzc2FnZS5SZXNwb25zZS5SZXNvY2FJbmZvGkgKClJl",
          "c29jYUluZm8SDwoHdmVyc2lvbhgBIAEoCRISCgppbnRlcmZhY2VzGAIgAygJ",
          "EhUKDXNlc3Npb25QcmVmaXgYAyABKA0imAEKDFJlc3BvbnNlVHlwZRIHCgNB",
          "Q0sQABILCgdTVUNDRVNTEAESBwoDRVJSEAISCAoEUE9ORxADEgoKBkNBTl9S",
          "WBAEEgoKBkNBTl9UWBAFEg4KCkNBTl9UWF9FUlIQBhIUChBDQU5fSUZfQ09O",
          "TkVDVEVEEAcSFwoTQ0FOX0lGX0RJU0NPTk5FQ1RFRBAIEggKBElORk8QCWIG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ResocaMessage), global::ResocaMessage.Parser, new[]{ "IsResponse", "Request", "Response" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ResocaMessage.Types.CanFrame), global::ResocaMessage.Types.CanFrame.Parser, new[]{ "CanID", "IsCanFD", "IsEFFFRAME", "IsRTRFRAME", "IsERRFRAME", "IsCanFDESI", "IsCanFDBRS", "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResocaMessage.Types.Request), global::ResocaMessage.Types.Request.Parser, new[]{ "RequestType", "RequestID", "IfName", "CanFrame" }, null, new[]{ typeof(global::ResocaMessage.Types.Request.Types.RequestType) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResocaMessage.Types.Response), global::ResocaMessage.Types.Response.Parser, new[]{ "ResponseType", "ResponseID", "Description", "IfName", "CanFrame", "ResocaInfo" }, null, new[]{ typeof(global::ResocaMessage.Types.Response.Types.ResponseType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ResocaMessage.Types.Response.Types.ResocaInfo), global::ResocaMessage.Types.Response.Types.ResocaInfo.Parser, new[]{ "Version", "Interfaces", "SessionPrefix" }, null, null, null, null)})})
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ResocaMessage : pb::IMessage<ResocaMessage> {
  private static readonly pb::MessageParser<ResocaMessage> _parser = new pb::MessageParser<ResocaMessage>(() => new ResocaMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResocaMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResocaMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResocaMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResocaMessage(ResocaMessage other) : this() {
    isResponse_ = other.isResponse_;
    request_ = other.request_ != null ? other.request_.Clone() : null;
    response_ = other.response_ != null ? other.response_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResocaMessage Clone() {
    return new ResocaMessage(this);
  }

  /// <summary>Field number for the "isResponse" field.</summary>
  public const int IsResponseFieldNumber = 1;
  private bool isResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsResponse {
    get { return isResponse_; }
    set {
      isResponse_ = value;
    }
  }

  /// <summary>Field number for the "request" field.</summary>
  public const int RequestFieldNumber = 2;
  private global::ResocaMessage.Types.Request request_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ResocaMessage.Types.Request Request {
    get { return request_; }
    set {
      request_ = value;
    }
  }

  /// <summary>Field number for the "response" field.</summary>
  public const int ResponseFieldNumber = 3;
  private global::ResocaMessage.Types.Response response_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ResocaMessage.Types.Response Response {
    get { return response_; }
    set {
      response_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResocaMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResocaMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsResponse != other.IsResponse) return false;
    if (!object.Equals(Request, other.Request)) return false;
    if (!object.Equals(Response, other.Response)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsResponse != false) hash ^= IsResponse.GetHashCode();
    if (request_ != null) hash ^= Request.GetHashCode();
    if (response_ != null) hash ^= Response.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsResponse != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsResponse);
    }
    if (request_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Request);
    }
    if (response_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Response);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsResponse != false) {
      size += 1 + 1;
    }
    if (request_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
    }
    if (response_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResocaMessage other) {
    if (other == null) {
      return;
    }
    if (other.IsResponse != false) {
      IsResponse = other.IsResponse;
    }
    if (other.request_ != null) {
      if (request_ == null) {
        Request = new global::ResocaMessage.Types.Request();
      }
      Request.MergeFrom(other.Request);
    }
    if (other.response_ != null) {
      if (response_ == null) {
        Response = new global::ResocaMessage.Types.Response();
      }
      Response.MergeFrom(other.Response);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsResponse = input.ReadBool();
          break;
        }
        case 18: {
          if (request_ == null) {
            Request = new global::ResocaMessage.Types.Request();
          }
          input.ReadMessage(Request);
          break;
        }
        case 26: {
          if (response_ == null) {
            Response = new global::ResocaMessage.Types.Response();
          }
          input.ReadMessage(Response);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ResocaMessage message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class CanFrame : pb::IMessage<CanFrame> {
      private static readonly pb::MessageParser<CanFrame> _parser = new pb::MessageParser<CanFrame>(() => new CanFrame());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<CanFrame> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ResocaMessage.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CanFrame() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CanFrame(CanFrame other) : this() {
        canID_ = other.canID_;
        isCanFD_ = other.isCanFD_;
        isEFFFRAME_ = other.isEFFFRAME_;
        isRTRFRAME_ = other.isRTRFRAME_;
        isERRFRAME_ = other.isERRFRAME_;
        isCanFDESI_ = other.isCanFDESI_;
        isCanFDBRS_ = other.isCanFDBRS_;
        data_ = other.data_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public CanFrame Clone() {
        return new CanFrame(this);
      }

      /// <summary>Field number for the "canID" field.</summary>
      public const int CanIDFieldNumber = 1;
      private uint canID_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint CanID {
        get { return canID_; }
        set {
          canID_ = value;
        }
      }

      /// <summary>Field number for the "isCanFD" field.</summary>
      public const int IsCanFDFieldNumber = 2;
      private bool isCanFD_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsCanFD {
        get { return isCanFD_; }
        set {
          isCanFD_ = value;
        }
      }

      /// <summary>Field number for the "isEFFFRAME" field.</summary>
      public const int IsEFFFRAMEFieldNumber = 3;
      private bool isEFFFRAME_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsEFFFRAME {
        get { return isEFFFRAME_; }
        set {
          isEFFFRAME_ = value;
        }
      }

      /// <summary>Field number for the "isRTRFRAME" field.</summary>
      public const int IsRTRFRAMEFieldNumber = 4;
      private bool isRTRFRAME_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsRTRFRAME {
        get { return isRTRFRAME_; }
        set {
          isRTRFRAME_ = value;
        }
      }

      /// <summary>Field number for the "isERRFRAME" field.</summary>
      public const int IsERRFRAMEFieldNumber = 5;
      private bool isERRFRAME_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsERRFRAME {
        get { return isERRFRAME_; }
        set {
          isERRFRAME_ = value;
        }
      }

      /// <summary>Field number for the "isCanFDESI" field.</summary>
      public const int IsCanFDESIFieldNumber = 6;
      private bool isCanFDESI_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsCanFDESI {
        get { return isCanFDESI_; }
        set {
          isCanFDESI_ = value;
        }
      }

      /// <summary>Field number for the "isCanFDBRS" field.</summary>
      public const int IsCanFDBRSFieldNumber = 7;
      private bool isCanFDBRS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool IsCanFDBRS {
        get { return isCanFDBRS_; }
        set {
          isCanFDBRS_ = value;
        }
      }

      /// <summary>Field number for the "data" field.</summary>
      public const int DataFieldNumber = 10;
      private pb::ByteString data_ = pb::ByteString.Empty;
      /// <summary>
      ///this has a length parameter, no need to ecode that seperately
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pb::ByteString Data {
        get { return data_; }
        set {
          data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as CanFrame);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(CanFrame other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (CanID != other.CanID) return false;
        if (IsCanFD != other.IsCanFD) return false;
        if (IsEFFFRAME != other.IsEFFFRAME) return false;
        if (IsRTRFRAME != other.IsRTRFRAME) return false;
        if (IsERRFRAME != other.IsERRFRAME) return false;
        if (IsCanFDESI != other.IsCanFDESI) return false;
        if (IsCanFDBRS != other.IsCanFDBRS) return false;
        if (Data != other.Data) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (CanID != 0) hash ^= CanID.GetHashCode();
        if (IsCanFD != false) hash ^= IsCanFD.GetHashCode();
        if (IsEFFFRAME != false) hash ^= IsEFFFRAME.GetHashCode();
        if (IsRTRFRAME != false) hash ^= IsRTRFRAME.GetHashCode();
        if (IsERRFRAME != false) hash ^= IsERRFRAME.GetHashCode();
        if (IsCanFDESI != false) hash ^= IsCanFDESI.GetHashCode();
        if (IsCanFDBRS != false) hash ^= IsCanFDBRS.GetHashCode();
        if (Data.Length != 0) hash ^= Data.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (CanID != 0) {
          output.WriteRawTag(8);
          output.WriteUInt32(CanID);
        }
        if (IsCanFD != false) {
          output.WriteRawTag(16);
          output.WriteBool(IsCanFD);
        }
        if (IsEFFFRAME != false) {
          output.WriteRawTag(24);
          output.WriteBool(IsEFFFRAME);
        }
        if (IsRTRFRAME != false) {
          output.WriteRawTag(32);
          output.WriteBool(IsRTRFRAME);
        }
        if (IsERRFRAME != false) {
          output.WriteRawTag(40);
          output.WriteBool(IsERRFRAME);
        }
        if (IsCanFDESI != false) {
          output.WriteRawTag(48);
          output.WriteBool(IsCanFDESI);
        }
        if (IsCanFDBRS != false) {
          output.WriteRawTag(56);
          output.WriteBool(IsCanFDBRS);
        }
        if (Data.Length != 0) {
          output.WriteRawTag(82);
          output.WriteBytes(Data);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (CanID != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CanID);
        }
        if (IsCanFD != false) {
          size += 1 + 1;
        }
        if (IsEFFFRAME != false) {
          size += 1 + 1;
        }
        if (IsRTRFRAME != false) {
          size += 1 + 1;
        }
        if (IsERRFRAME != false) {
          size += 1 + 1;
        }
        if (IsCanFDESI != false) {
          size += 1 + 1;
        }
        if (IsCanFDBRS != false) {
          size += 1 + 1;
        }
        if (Data.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(CanFrame other) {
        if (other == null) {
          return;
        }
        if (other.CanID != 0) {
          CanID = other.CanID;
        }
        if (other.IsCanFD != false) {
          IsCanFD = other.IsCanFD;
        }
        if (other.IsEFFFRAME != false) {
          IsEFFFRAME = other.IsEFFFRAME;
        }
        if (other.IsRTRFRAME != false) {
          IsRTRFRAME = other.IsRTRFRAME;
        }
        if (other.IsERRFRAME != false) {
          IsERRFRAME = other.IsERRFRAME;
        }
        if (other.IsCanFDESI != false) {
          IsCanFDESI = other.IsCanFDESI;
        }
        if (other.IsCanFDBRS != false) {
          IsCanFDBRS = other.IsCanFDBRS;
        }
        if (other.Data.Length != 0) {
          Data = other.Data;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              CanID = input.ReadUInt32();
              break;
            }
            case 16: {
              IsCanFD = input.ReadBool();
              break;
            }
            case 24: {
              IsEFFFRAME = input.ReadBool();
              break;
            }
            case 32: {
              IsRTRFRAME = input.ReadBool();
              break;
            }
            case 40: {
              IsERRFRAME = input.ReadBool();
              break;
            }
            case 48: {
              IsCanFDESI = input.ReadBool();
              break;
            }
            case 56: {
              IsCanFDBRS = input.ReadBool();
              break;
            }
            case 82: {
              Data = input.ReadBytes();
              break;
            }
          }
        }
      }

    }

    public sealed partial class Request : pb::IMessage<Request> {
      private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Request> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ResocaMessage.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Request() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Request(Request other) : this() {
        requestType_ = other.requestType_;
        requestID_ = other.requestID_;
        ifName_ = other.ifName_;
        canFrame_ = other.canFrame_ != null ? other.canFrame_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Request Clone() {
        return new Request(this);
      }

      /// <summary>Field number for the "requestType" field.</summary>
      public const int RequestTypeFieldNumber = 1;
      private global::ResocaMessage.Types.Request.Types.RequestType requestType_ = global::ResocaMessage.Types.Request.Types.RequestType.Ping;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ResocaMessage.Types.Request.Types.RequestType RequestType {
        get { return requestType_; }
        set {
          requestType_ = value;
        }
      }

      /// <summary>Field number for the "requestID" field.</summary>
      public const int RequestIDFieldNumber = 2;
      private uint requestID_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint RequestID {
        get { return requestID_; }
        set {
          requestID_ = value;
        }
      }

      /// <summary>Field number for the "ifName" field.</summary>
      public const int IfNameFieldNumber = 3;
      private string ifName_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string IfName {
        get { return ifName_; }
        set {
          ifName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "canFrame" field.</summary>
      public const int CanFrameFieldNumber = 4;
      private global::ResocaMessage.Types.CanFrame canFrame_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ResocaMessage.Types.CanFrame CanFrame {
        get { return canFrame_; }
        set {
          canFrame_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Request);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Request other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (RequestType != other.RequestType) return false;
        if (RequestID != other.RequestID) return false;
        if (IfName != other.IfName) return false;
        if (!object.Equals(CanFrame, other.CanFrame)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (RequestType != global::ResocaMessage.Types.Request.Types.RequestType.Ping) hash ^= RequestType.GetHashCode();
        if (RequestID != 0) hash ^= RequestID.GetHashCode();
        if (IfName.Length != 0) hash ^= IfName.GetHashCode();
        if (canFrame_ != null) hash ^= CanFrame.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (RequestType != global::ResocaMessage.Types.Request.Types.RequestType.Ping) {
          output.WriteRawTag(8);
          output.WriteEnum((int) RequestType);
        }
        if (RequestID != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(RequestID);
        }
        if (IfName.Length != 0) {
          output.WriteRawTag(26);
          output.WriteString(IfName);
        }
        if (canFrame_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(CanFrame);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (RequestType != global::ResocaMessage.Types.Request.Types.RequestType.Ping) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestType);
        }
        if (RequestID != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestID);
        }
        if (IfName.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(IfName);
        }
        if (canFrame_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(CanFrame);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Request other) {
        if (other == null) {
          return;
        }
        if (other.RequestType != global::ResocaMessage.Types.Request.Types.RequestType.Ping) {
          RequestType = other.RequestType;
        }
        if (other.RequestID != 0) {
          RequestID = other.RequestID;
        }
        if (other.IfName.Length != 0) {
          IfName = other.IfName;
        }
        if (other.canFrame_ != null) {
          if (canFrame_ == null) {
            CanFrame = new global::ResocaMessage.Types.CanFrame();
          }
          CanFrame.MergeFrom(other.CanFrame);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              RequestType = (global::ResocaMessage.Types.Request.Types.RequestType) input.ReadEnum();
              break;
            }
            case 16: {
              RequestID = input.ReadUInt32();
              break;
            }
            case 26: {
              IfName = input.ReadString();
              break;
            }
            case 34: {
              if (canFrame_ == null) {
                CanFrame = new global::ResocaMessage.Types.CanFrame();
              }
              input.ReadMessage(CanFrame);
              break;
            }
          }
        }
      }

      #region Nested types
      /// <summary>Container for nested types declared in the Request message type.</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static partial class Types {
        public enum RequestType {
          [pbr::OriginalName("PING")] Ping = 0,
          [pbr::OriginalName("NOTIFY_START")] NotifyStart = 1,
          [pbr::OriginalName("NOTIFY_END")] NotifyEnd = 2,
          [pbr::OriginalName("CAN_TX")] CanTx = 3,
          [pbr::OriginalName("INFO")] Info = 4,
        }

      }
      #endregion

    }

    public sealed partial class Response : pb::IMessage<Response> {
      private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Response> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ResocaMessage.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Response() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Response(Response other) : this() {
        responseType_ = other.responseType_;
        responseID_ = other.responseID_;
        description_ = other.description_;
        ifName_ = other.ifName_;
        canFrame_ = other.canFrame_ != null ? other.canFrame_.Clone() : null;
        resocaInfo_ = other.resocaInfo_ != null ? other.resocaInfo_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Response Clone() {
        return new Response(this);
      }

      /// <summary>Field number for the "responseType" field.</summary>
      public const int ResponseTypeFieldNumber = 1;
      private global::ResocaMessage.Types.Response.Types.ResponseType responseType_ = global::ResocaMessage.Types.Response.Types.ResponseType.Ack;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ResocaMessage.Types.Response.Types.ResponseType ResponseType {
        get { return responseType_; }
        set {
          responseType_ = value;
        }
      }

      /// <summary>Field number for the "responseID" field.</summary>
      public const int ResponseIDFieldNumber = 2;
      private uint responseID_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public uint ResponseID {
        get { return responseID_; }
        set {
          responseID_ = value;
        }
      }

      /// <summary>Field number for the "description" field.</summary>
      public const int DescriptionFieldNumber = 3;
      private string description_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Description {
        get { return description_; }
        set {
          description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "ifName" field.</summary>
      public const int IfNameFieldNumber = 4;
      private string ifName_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string IfName {
        get { return ifName_; }
        set {
          ifName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "canFrame" field.</summary>
      public const int CanFrameFieldNumber = 5;
      private global::ResocaMessage.Types.CanFrame canFrame_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ResocaMessage.Types.CanFrame CanFrame {
        get { return canFrame_; }
        set {
          canFrame_ = value;
        }
      }

      /// <summary>Field number for the "resocaInfo" field.</summary>
      public const int ResocaInfoFieldNumber = 6;
      private global::ResocaMessage.Types.Response.Types.ResocaInfo resocaInfo_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ResocaMessage.Types.Response.Types.ResocaInfo ResocaInfo {
        get { return resocaInfo_; }
        set {
          resocaInfo_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Response);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Response other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ResponseType != other.ResponseType) return false;
        if (ResponseID != other.ResponseID) return false;
        if (Description != other.Description) return false;
        if (IfName != other.IfName) return false;
        if (!object.Equals(CanFrame, other.CanFrame)) return false;
        if (!object.Equals(ResocaInfo, other.ResocaInfo)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (ResponseType != global::ResocaMessage.Types.Response.Types.ResponseType.Ack) hash ^= ResponseType.GetHashCode();
        if (ResponseID != 0) hash ^= ResponseID.GetHashCode();
        if (Description.Length != 0) hash ^= Description.GetHashCode();
        if (IfName.Length != 0) hash ^= IfName.GetHashCode();
        if (canFrame_ != null) hash ^= CanFrame.GetHashCode();
        if (resocaInfo_ != null) hash ^= ResocaInfo.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (ResponseType != global::ResocaMessage.Types.Response.Types.ResponseType.Ack) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ResponseType);
        }
        if (ResponseID != 0) {
          output.WriteRawTag(16);
          output.WriteUInt32(ResponseID);
        }
        if (Description.Length != 0) {
          output.WriteRawTag(26);
          output.WriteString(Description);
        }
        if (IfName.Length != 0) {
          output.WriteRawTag(34);
          output.WriteString(IfName);
        }
        if (canFrame_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(CanFrame);
        }
        if (resocaInfo_ != null) {
          output.WriteRawTag(50);
          output.WriteMessage(ResocaInfo);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (ResponseType != global::ResocaMessage.Types.Response.Types.ResponseType.Ack) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseType);
        }
        if (ResponseID != 0) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResponseID);
        }
        if (Description.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
        }
        if (IfName.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(IfName);
        }
        if (canFrame_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(CanFrame);
        }
        if (resocaInfo_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResocaInfo);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Response other) {
        if (other == null) {
          return;
        }
        if (other.ResponseType != global::ResocaMessage.Types.Response.Types.ResponseType.Ack) {
          ResponseType = other.ResponseType;
        }
        if (other.ResponseID != 0) {
          ResponseID = other.ResponseID;
        }
        if (other.Description.Length != 0) {
          Description = other.Description;
        }
        if (other.IfName.Length != 0) {
          IfName = other.IfName;
        }
        if (other.canFrame_ != null) {
          if (canFrame_ == null) {
            CanFrame = new global::ResocaMessage.Types.CanFrame();
          }
          CanFrame.MergeFrom(other.CanFrame);
        }
        if (other.resocaInfo_ != null) {
          if (resocaInfo_ == null) {
            ResocaInfo = new global::ResocaMessage.Types.Response.Types.ResocaInfo();
          }
          ResocaInfo.MergeFrom(other.ResocaInfo);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ResponseType = (global::ResocaMessage.Types.Response.Types.ResponseType) input.ReadEnum();
              break;
            }
            case 16: {
              ResponseID = input.ReadUInt32();
              break;
            }
            case 26: {
              Description = input.ReadString();
              break;
            }
            case 34: {
              IfName = input.ReadString();
              break;
            }
            case 42: {
              if (canFrame_ == null) {
                CanFrame = new global::ResocaMessage.Types.CanFrame();
              }
              input.ReadMessage(CanFrame);
              break;
            }
            case 50: {
              if (resocaInfo_ == null) {
                ResocaInfo = new global::ResocaMessage.Types.Response.Types.ResocaInfo();
              }
              input.ReadMessage(ResocaInfo);
              break;
            }
          }
        }
      }

      #region Nested types
      /// <summary>Container for nested types declared in the Response message type.</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static partial class Types {
        public enum ResponseType {
          [pbr::OriginalName("ACK")] Ack = 0,
          [pbr::OriginalName("SUCCESS")] Success = 1,
          [pbr::OriginalName("ERR")] Err = 2,
          [pbr::OriginalName("PONG")] Pong = 3,
          [pbr::OriginalName("CAN_RX")] CanRx = 4,
          [pbr::OriginalName("CAN_TX")] CanTx = 5,
          [pbr::OriginalName("CAN_TX_ERR")] CanTxErr = 6,
          [pbr::OriginalName("CAN_IF_CONNECTED")] CanIfConnected = 7,
          [pbr::OriginalName("CAN_IF_DISCONNECTED")] CanIfDisconnected = 8,
          [pbr::OriginalName("INFO")] Info = 9,
        }

        public sealed partial class ResocaInfo : pb::IMessage<ResocaInfo> {
          private static readonly pb::MessageParser<ResocaInfo> _parser = new pb::MessageParser<ResocaInfo>(() => new ResocaInfo());
          private pb::UnknownFieldSet _unknownFields;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public static pb::MessageParser<ResocaInfo> Parser { get { return _parser; } }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public static pbr::MessageDescriptor Descriptor {
            get { return global::ResocaMessage.Types.Response.Descriptor.NestedTypes[0]; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public ResocaInfo() {
            OnConstruction();
          }

          partial void OnConstruction();

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public ResocaInfo(ResocaInfo other) : this() {
            version_ = other.version_;
            interfaces_ = other.interfaces_.Clone();
            sessionPrefix_ = other.sessionPrefix_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public ResocaInfo Clone() {
            return new ResocaInfo(this);
          }

          /// <summary>Field number for the "version" field.</summary>
          public const int VersionFieldNumber = 1;
          private string version_ = "";
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public string Version {
            get { return version_; }
            set {
              version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
          }

          /// <summary>Field number for the "interfaces" field.</summary>
          public const int InterfacesFieldNumber = 2;
          private static readonly pb::FieldCodec<string> _repeated_interfaces_codec
              = pb::FieldCodec.ForString(18);
          private readonly pbc::RepeatedField<string> interfaces_ = new pbc::RepeatedField<string>();
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public pbc::RepeatedField<string> Interfaces {
            get { return interfaces_; }
          }

          /// <summary>Field number for the "sessionPrefix" field.</summary>
          public const int SessionPrefixFieldNumber = 3;
          private uint sessionPrefix_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public uint SessionPrefix {
            get { return sessionPrefix_; }
            set {
              sessionPrefix_ = value;
            }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public override bool Equals(object other) {
            return Equals(other as ResocaInfo);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public bool Equals(ResocaInfo other) {
            if (ReferenceEquals(other, null)) {
              return false;
            }
            if (ReferenceEquals(other, this)) {
              return true;
            }
            if (Version != other.Version) return false;
            if(!interfaces_.Equals(other.interfaces_)) return false;
            if (SessionPrefix != other.SessionPrefix) return false;
            return Equals(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public override int GetHashCode() {
            int hash = 1;
            if (Version.Length != 0) hash ^= Version.GetHashCode();
            hash ^= interfaces_.GetHashCode();
            if (SessionPrefix != 0) hash ^= SessionPrefix.GetHashCode();
            if (_unknownFields != null) {
              hash ^= _unknownFields.GetHashCode();
            }
            return hash;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public void WriteTo(pb::CodedOutputStream output) {
            if (Version.Length != 0) {
              output.WriteRawTag(10);
              output.WriteString(Version);
            }
            interfaces_.WriteTo(output, _repeated_interfaces_codec);
            if (SessionPrefix != 0) {
              output.WriteRawTag(24);
              output.WriteUInt32(SessionPrefix);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(output);
            }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public int CalculateSize() {
            int size = 0;
            if (Version.Length != 0) {
              size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
            }
            size += interfaces_.CalculateSize(_repeated_interfaces_codec);
            if (SessionPrefix != 0) {
              size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SessionPrefix);
            }
            if (_unknownFields != null) {
              size += _unknownFields.CalculateSize();
            }
            return size;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public void MergeFrom(ResocaInfo other) {
            if (other == null) {
              return;
            }
            if (other.Version.Length != 0) {
              Version = other.Version;
            }
            interfaces_.Add(other.interfaces_);
            if (other.SessionPrefix != 0) {
              SessionPrefix = other.SessionPrefix;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                  break;
                case 10: {
                  Version = input.ReadString();
                  break;
                }
                case 18: {
                  interfaces_.AddEntriesFrom(input, _repeated_interfaces_codec);
                  break;
                }
                case 24: {
                  SessionPrefix = input.ReadUInt32();
                  break;
                }
              }
            }
          }

        }

      }
      #endregion

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
